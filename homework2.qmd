---
title: "Homework 2"
author: "Nikita Reid"
date: 2023-05-22
format: 
  docx: default
  html:
    toc: true
    toc_float: true
    code-fold: true
editor: visual
---

```{r load-libraries , echo=FALSE , message=FALSE , warning=FALSE}

# load required libraries 

library(tidyverse)
library(wbstats)
library(skimr)
library(countrycode)
library(here)
```

# Data Visualisation

# Mass shootings in the US

In July 2012, in the aftermath of a mass shooting in a movie theater in Aurora, Colorado, [Mother Jones](https://www.motherjones.com/politics/2012/07/mass-shootings-map/) published a report on mass shootings in the United States since 1982. They provided the underlying data set as [an open-source database](https://www.motherjones.com/politics/2012/12/mass-shootings-mother-jones-full-data/) for anyone interested in studying criminal behavior.

```{r load-data echo=FALSE , message=FALSE , warning=FALSE}

# read in and check out the data

mass_shootings <- read_csv(here::here("data" , "mass_shootings.csv"), show_col_types = FALSE)

glimpse(mass_shootings)
```

-   Generate a data frame that summarizes the number of mass shootings per year.

```{r number-shootings-year}

# create new dataframe 

number_shootings <- mass_shootings %>% 
  
# group by year and count the number of shooitngs in each 
  group_by(year) %>% 
  count()

number_shootings
```

-   Generate a bar chart that identifies the number of mass shooters associated with each race category. The bars should be sorted from highest to lowest and each bar should show its number.

```{r number-shootings-race}

# remove missing values
mass_shootings %>%
  drop_na(race) %>% 

# count the frequency of different races 
  count(race) %>%
  
# arrange races in order
  mutate(race = fct_reorder(race,n)) %>%

# plot bar chart
  ggplot(aes(x = n, y = race)) + 
  geom_bar(stat = "identity") +

# add text for count to each bar
  geom_text(aes(label = n, x = n - 0.5), 
            colour = "white", size = 4 , hjust = 1) +
  labs(title = "Number of mass shooters by race category"
       , x ="", y ="")
```

-   Generate a boxplot visualizing the number of total victims, by type of location.

```{r boxplot-by-location, warning=FALSE}

# boxplot of total shooting victims by location
mass_shootings %>%
  ggplot(aes(x = location_type, y = total_victims)) + 
  geom_boxplot() +

# some labels we probably need 
  labs(title = "Spread of number of victims of a shooting incident \nby location type", 
       x = "Type of location", y= "Number of victims")

```

-   Redraw the same plot, but remove the Las Vegas Strip massacre from the dataset.

```{r boxplot-by-location-2}

mass_shootings %>%
  
# filter to use all data except the Las Vegas strip massacre
  filter(case != "Las Vegas Strip massacre") %>% 
  
# boxplot of total shooting victims by location
  ggplot(aes(x = location_type, y = total_victims)) + 
  geom_boxplot() +

# some labels we probably need 
  labs(title = "Spread of number of victims of a shooting incident \nby location type (outlier removed)", 
       x = "Type of location", y= "Number of victims")

```

-   How many white males with prior signs of mental illness initiated a mass shooting after 2000? 22

```{r prior-mental-illness}

mass_shootings %>% 
  
# filter for incident happening after 2000
  filter(year>2000) %>% 
# filter for male and white and prior mental illness 
  filter(male==TRUE & 
           race=="White" & 
           prior_mental_illness=="Yes") %>% 
# count them 
  count()

```

-   Which month of the year has the most mass shootings? Generate a bar chart sorted in chronological (natural) order (Jan-Feb-Mar- etc) to provide evidence of your answer. From the bar chart, February has the most mass shootings, with 13.

```{r month-most-shootings}

mass_shootings %>% 
  
# count mass shootings for each month 
  group_by(month) %>% 
  count() %>% 
  
# plot bar chart 
  ggplot(aes(x = month, y = n)) + 
  geom_bar(stat = "identity") +
  
# fix x scale to put months in natural order 
  scale_x_discrete(limits= month.abb) +
  
# add text to bars to show number of shootings for each month
  geom_text(aes(label = n, y= n - 0.5), 
            colour = "white", size = 4 , vjust = 1) +
  
# don't need axis labels here 
  labs(title = "Number of mass shootings by month"
       , x ="", y ="")
  

```

-   How does the distribution of mass shooting fatalities differ between White and Black shooters? What about White and Latino shooters?

    On average (from box plots) the number of fatalities in incidents committed by white shooters is higher than those comitted by both black and latino shooters as well as there being a non-neglible number of extreme cases where white shooters claimed many victims. The trend seems to suggest that fatalities are higher in incidents when white shooters are involved.

```{r boxplot-by-races}

# boxplot of total shooting fatalities by race white vs black 
mass_shootings %>%
  
# filter for race white or black first then plot 
  filter(race=="White"| race=="Black") %>% 
  
# filter out the Las Vegas massacre again because it ruins plots!
  filter(case != "Las Vegas Strip massacre") %>% 
  
  ggplot(aes(x = race, y = fatalities)) + 
  geom_boxplot() +

# labels
  labs(title = "Spread of number of fatalities of a shooting incident \nby white versus black shooters", 
       x = "Race of shooter", y= "Number of fatalities")


# boxplot of total shooting fatalities by race white vs latino 
mass_shootings %>%
  
# filter for race white or latino first then plot 
  filter(race=="White"| race=="Latino") %>% 
  
# filter out the Las Vegas massacre again because it ruins plots!
  filter(case != "Las Vegas Strip massacre") %>% 
  
  ggplot(aes(x = race, y = fatalities)) + 
  geom_boxplot() +

# labels
  labs(title = "Spread of number of fatalities of a shooting incident \nby white versus latino shooters", 
       x = "Race of shooter", y= "Number of fatalities")

```

-   Are mass shootings with shooters suffering from mental illness different from mass shootings with no signs of mental illness in the shooter?

    In general, from box plot, shooters with a prior mental illness documented tend to harm more victims in a shooting, on average and in extreme outlying cases. Furthermore, from bar chart, shooters with a history of mental illness tend to engage in shootings at all types of locations, far more frequently than shooters without a history of mental illness. This probably makes sense, as these people tend to be erratic, and their motivations for violence are often not rational or true to any type of pattern. Shooters with no mental history only shot at schools, workplaces or other locations. This seems to suggest more "explainable" motives such as a vendetta against former coworkers or schoolmates.

```{r investigating-mental-illness}

# first let's investigate where these shootings take place 
 mass_shootings %>% 
   
# remove missing values to investigate prior mental illness 
   drop_na(prior_mental_illness) %>% 
   
# collect values by location type and history of mental illness 
   group_by(location_type, prior_mental_illness) %>% 
   count() %>% 
   
# plot separate side by side bars by location type 
# for shooters with and without a history of mental illness 
   ggplot(aes(x = n, y = location_type, 
              fill= prior_mental_illness)) + 
   geom_bar(stat="identity",position ="dodge") +
   
   labs(title = "Relationship between shooting location types \nand the mental history of the shooter involved",
        x = "Number of incidents", y = "Type of location",
        fill = "History of mental illness?")

 
# next let's investigate how number of victims relate to mental illness
mass_shootings %>% 
   
# remove missing values to investigate prior mental illness 
  drop_na(prior_mental_illness) %>% 
   
# plot boxplot to see distribution of victims by mental history  
  ggplot(aes(x = prior_mental_illness, y = total_victims)) +
  geom_boxplot() +
   
  labs(title = "Relationship between number of shooting victims \nand the mental history of the shooter involved",
      x = "History of mental illness?", 
      y = "Number of shooting victims")

```

-   Assess the relationship between mental illness and total victims, mental illness and location type, and the intersection of all three variables.

    I have already investigated the relationship between mental illness and total victims, mental illness and location type above as these seemed to be the best variables to analyse the difference in shootings based on history of mental illness. No other variables were particularly interesting. So, see above.

    Now, let's examine the intersection between all three variables:

    Along with the above, it is clear that, across all locations, shooters with a history of mental illness harm far more victims.

```{r investigating-mental-illness-2}

# investigate this with bar chart with some colour for third dimension 
 mass_shootings %>% 
   
# remove missing values to investigate prior mental illness 
   drop_na(prior_mental_illness) %>% 
   
# plot stacked bars by location type against number of victims
# for shooters with and without a history of mental illness 
   ggplot(aes(x = total_victims, y = location_type, 
              fill= prior_mental_illness)) + 
   geom_bar(stat="identity") +
   
   labs(title = "Relationship between shooting location types,
        \nnumber of shooting victims
        \nand the mental history of the shooter involved",
        x = "Total number of shooting victims", 
        y = "Type of location",
        fill = "History of mental illness?")

```

# Exploring credit card fraud

The data set we will use consists of credit card transactions and it includes information about each transaction including customer details, the merchant and category of purchase, and whether or not the transaction was a fraud.

```{r read-data, echo=FALSE, message=FALSE, warning=FALSE}

# read in the data 

card_fraud <- read_csv(here::here("data", "card_fraud.csv"))

```

-   In this data set, how likely are fraudulent transactions? Generate a table that summarizes the number and frequency of fraudulent transactions per year. Approximately 0.6% of transactions were fraudulent in both 2019 and 2020.

```{r fraud-likelihood}

# group transactions by year 
card_fraud %>% 
  group_by(trans_year) %>% 
# count number of fraudulent and non- fraudulent transactions 
  count(is_fraud) %>% 
# calculate variable for frequency of fraud 
  mutate(frequency_percentage = n/sum(n) *100) %>% 
  
# filter and display on data for fraudulent transactions in table
  filter(is_fraud==1)

```

-   How much money (in US\$ terms) are fraudulent transactions costing the company? Generate a table that summarizes the total amount of legitimate and fraudulent transactions per year and calculate the % of fraudulent transactions, in US\$ terms.

```{r cost-of-fraud, message=FALSE}

# group transactions by year and fraud status
card_fraud %>% 
  group_by(trans_year, is_fraud) %>%
  
# calculate total dollar amount for each fraud group and year 
  summarize(total_amount_dollars = sum(amt)) %>% 
  
# calculate percentage of total amount for each fraud group 
  mutate(percentage_dollars = 
           total_amount_dollars/sum(total_amount_dollars)*100)

```

-   Generate a histogram that shows the distribution of amounts charged to credit card, both for legitimate and fraudulent accounts. Also, for both types of transactions, calculate some quick summary statistics.

```{r amount-distributions, warning=FALSE}

# some quick summary stats using summarize 
# group by fraud versus legitimate 
card_fraud %>% 
  group_by(is_fraud) %>% 
# calculate summary stats of amounts for each
  summarize(mean_amount= mean(amt), 
            median_amount = median(amt), 
            minimum_amount = min(amt), 
            maximum_amount = max(amt))

# now plot histograms 
card_fraud %>%
# first only fraudulent transactions
  filter(is_fraud==1) %>% 
# plot distribution - make bins look as good as possible 
  ggplot(aes(x = amt)) +
  geom_histogram(bins=60) +

  labs(title = "Distribution of transactions amounts
       \nof fraudulent transactions", 
       x = "Transaction amount / $", y="")

# now plot histograms 
card_fraud %>%
# next only legitimate transactions
  filter(is_fraud==0) %>% 
# plot distribution - make bins look as good as possible 
  ggplot(aes(x = amt)) +
  geom_histogram(bins=100) + 
# take out large amount outliers for this purpose so the graph looks decent 
  scale_x_continuous(limits= c(1,500)) +
  
  labs(title = "Distribution of transactions amounts
       \nof legitimate transactions", 
       x = "Transaction amount / $", y="")
```

-   What types of purchases are most likely to be instances of fraud? Consider category of merchants and produce a bar chart that shows % of total fraudulent transactions sorted in order.

```{r merchants-fraud}

card_fraud %>% 
# filter for only farud transactions
  filter(is_fraud==1) %>% 
  
# count them by category and rearrange bars based on count
  count(category) %>% 
  mutate(category = fct_reorder(category,n)) %>%
  
# calculate percentage of fraud by catgeory of merchant 
  mutate(percentage = n/sum(n)*100) %>% 
  
# plot categories of fraud percentage frequency
  ggplot(aes(y=category, x=percentage)) + 
  geom_bar(stat = "identity") +
  labs(title="Percentage of fraudulent transactions 
       \nby type of merchant", 
       x = "Percentage of transactions",
       y = "Type of merchant")
  

```

-   When is fraud more prevalent? Which days, months, hours? To create new variables to help you in your analysis, we use the `lubridate` package and the following code

```         
mutate(
  date_only = lubridate::date(trans_date_trans_time),
  month_name = lubridate::month(trans_date_trans_time, label=TRUE),
  hour = lubridate::hour(trans_date_trans_time),
  weekday = lubridate::wday(trans_date_trans_time, label = TRUE)
  )
```

-   Are older customers significantly more likely to be victims of credit card fraud? To calculate a customer's age, we use the `lubridate` package and the following code

```         
  mutate(
   age = interval(dob, trans_date_trans_time) / years(1),
    )
```

```{r}

```

-   Is fraud related to distance? The distance between a card holder's home and the location of the transaction can be a feature that is related to fraud. To calculate distance, we need the latidue/longitude of card holders's home and the latitude/longitude of the transaction, and we will use the [Haversine formula](https://en.wikipedia.org/wiki/Haversine_formula) to calculate distance. I adapted code to [calculate distance between two points on earth](https://www.geeksforgeeks.org/program-distance-two-points-earth/amp/) which you can find below

```{r}
# distance between card holder's home and transaction
# code adapted from https://www.geeksforgeeks.org/program-distance-two-points-earth/amp/


fraud <- fraud %>%
  mutate(
    
    # convert latitude/longitude to radians
    lat1_radians = lat / 57.29577951,
    lat2_radians = merch_lat / 57.29577951,
    long1_radians = long / 57.29577951,
    long2_radians = merch_long / 57.29577951,
    
    # calculate distance in miles
    distance_miles = 3963.0 * acos((sin(lat1_radians) * sin(lat2_radians)) + cos(lat1_radians) * cos(lat2_radians) * cos(long2_radians - long1_radians)),

    # calculate distance in km
    distance_km = 6377.830272 * acos((sin(lat1_radians) * sin(lat2_radians)) + cos(lat1_radians) * cos(lat2_radians) * cos(long2_radians - long1_radians))

  )

```

Plot a boxplot or a violin plot that looks at the relationship of distance and `is_fraud`. Does distance seem to be a useful feature in explaining fraud?

# Exploring sources of electricity production, CO2 emissions, and GDP per capita.

There are many sources of data on how countries generate their electricity and their CO2 emissions. I would like you to create three graphs:

## 1. A stacked area chart that shows how your own country generated its electricity since 2000.

You will use

`geom_area(colour="grey90", alpha = 0.5, position = "fill")`

## 2. A scatter plot that looks at how CO2 per capita and GDP per capita are related

## 3. A scatter plot that looks at how electricity usage (kWh) per capita/day GDP per capita are related

We will get energy data from the Our World in Data website, and CO2 and GDP per capita emissions from the World Bank, using the `wbstats`package.

```{r}
#| message: false
#| warning: false

# Download electricity data
url <- "https://nyc3.digitaloceanspaces.com/owid-public/data/energy/owid-energy-data.csv"

energy <- read_csv(url) %>% 
  filter(year >= 1990) %>% 
  drop_na(iso_code) %>% 
  select(1:3,
         biofuel = biofuel_electricity,
         coal = coal_electricity,
         gas = gas_electricity,
         hydro = hydro_electricity,
         nuclear = nuclear_electricity,
         oil = oil_electricity,
         other_renewable = other_renewable_exc_biofuel_electricity,
         solar = solar_electricity,
         wind = wind_electricity, 
         electricity_demand,
         electricity_generation,
         net_elec_imports,	# Net electricity imports, measured in terawatt-hours
         energy_per_capita,	# Primary energy consumption per capita, measured in kilowatt-hours	Calculated by Our World in Data based on BP Statistical Review of World Energy and EIA International Energy Data
         energy_per_gdp,	# Energy consumption per unit of GDP. This is measured in kilowatt-hours per 2011 international-$.
         per_capita_electricity, #	Electricity generation per capita, measured in kilowatt-hours
  ) 

# Download data for C02 emissions per capita https://data.worldbank.org/indicator/EN.ATM.CO2E.PC
co2_percap <- wb_data(country = "countries_only", 
                      indicator = "EN.ATM.CO2E.PC", 
                      start_date = 1990, 
                      end_date = 2022,
                      return_wide=FALSE) %>% 
  filter(!is.na(value)) %>% 
  #drop unwanted variables
  select(-c(unit, obs_status, footnote, last_updated)) %>% 
  rename(year = date,
         co2percap = value)


# Download data for GDP per capita  https://data.worldbank.org/indicator/NY.GDP.PCAP.PP.KD
gdp_percap <- wb_data(country = "countries_only", 
                      indicator = "NY.GDP.PCAP.PP.KD", 
                      start_date = 1990, 
                      end_date = 2022,
                      return_wide=FALSE) %>% 
  filter(!is.na(value)) %>% 
  #drop unwanted variables
  select(-c(unit, obs_status, footnote, last_updated)) %>% 
  rename(year = date,
         GDPpercap = value)
```

Specific questions:

1.  How would you turn `energy` to long, tidy format?
2.  You may need to join these data frames
    -   Use `left_join` from `dplyr` to [join the tables](http://r4ds.had.co.nz/relational-data.html)
    -   To complete the merge, you need a unique *key* to match observations between the data frames. Country names may not be consistent among the three dataframes, so please use the 3-digit ISO code for each country
    -   An aside: There is a great package called [`countrycode`](https://github.com/vincentarelbundock/countrycode) that helps solve the problem of inconsistent country names (Is it UK? United Kingdon? Great Britain?). `countrycode()` takes as an input a country's name in a specific format and outputs it using whatever format you specify.
3.  Write a function that takes as input any country's name and returns all three graphs. You can use the `patchwork` package to arrange the three graphs as shown below

![](images/electricity-co2-gdp.png)

# Deliverables

There is a lot of explanatory text, comments, etc. You do not need these, so delete them and produce a stand-alone document that you could share with someone. Knit the edited and completed Quarto Markdown (qmd) file as a Word document (use the "Render" button at the top of the script editor window) and upload it to Canvas. You must be commiting and pushing tour changes to your own Github repo as you go along.
